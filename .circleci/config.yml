version: 2.1

orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@2.0.3

jobs:
  job-run-scenarios:
    docker:
      - image: cimg/python:3.10.2

    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
          pip-dependency-file: requirements.txt
      - add_ssh_keys:
          fingerprints:
            - "b9:bb:68:b8:5a:53:90:e2:c4:d1:02:fb:97:2b:df:7a"
            - "12:15:ff:1d:8f:82:d9:e3:6c:5e:d9:d7:19:78:2b:4d"
      - restore_cache:
          name: Restoring client cache
          keys:
            - client-cache-v3-{{ epoch }}
            - client-cache-v3-
      - restore_cache:
          name: Restoring artifact cache
          keys:
            - masterdata-v2-
      - run:
          name: Checkout diff repo
          command: git clone --depth 1 "git@github.com:Stilamcat/ipr-master-diff.git"
      # - restore_cache:
      #     name: Restoring diff repo cache
      #     keys:
      #       - diff-v4-
      - run:
          name: Run scenarios
          command: python main.py --token ${REFRESH_TOKEN} --kvauth ${KV_AUTH} --kvurl ${KV_URL} -k --venus
      # - run:
      #     name: Install git lfs
      #     command: |
      #       curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
      #       sudo apt-get install git-lfs

      - run:
          name: Update Venus
          command: sh update_venus.sh
      - run:
          name: Run git diff
          command: sh git_push.sh
      - run:
          name: Clean temp files
          command: |
            rm -f "cache/need_update.txt"
            rm -rf "cache/update_master"
      - save_cache:
          name: Saving client cache
          key: client-cache-v3-{{ epoch }}
          paths:
            - cache
      - save_cache:
          name: Saving artifact cache
          key: masterdata-v2-{{ checksum "masterdata/!version.txt" }}
          paths:
            - masterdata
      # - save_cache:
      #     name: Saving diff repo cache
      #     key: diff-v4-{{ checksum "ipr-master-diff/!version.txt" }}
      #     paths:
      #       - ipr-master-diff
      - persist_to_workspace:
          root: masterdata
          paths:
            - Skill.json

  job-run-skillx:
    docker:
      - image: cimg/node:18.4.0

    steps:
      - attach_workspace:
          at: masterdata
      - run:
          name: Setup backend
          command: |
            git clone https://github.com/MalitsPlus/IDOLY-Backend.git backend
            cd backend
            npx pnpm@8 install
      - run:
          name: Generate and upload Skillx
          command: |
            export WRITE_API_ENDPOINT=${KV_URL}
            export ADMIN_TOKEN=${KV_AUTH}
            export DATA_PREFIX="HSM_"
            bash backend/scripts/uploadSkillx.sh $(realpath masterdata/Skill.json) || true

  job-run-check-googleplay-version:
    docker:
      - image: cimg/node:18.4.0

    steps:
      - restore_cache:
          name: Restoring client cache
          keys:
            - client-cache-v3-{{ epoch }}
            - client-cache-v3-
      - run:
          name: Init
          command: npx pnpm install
      - run:
          name: Get GooglePlay App version
          command: node main.js
      - save_cache:
          name: Saving client cache
          key: client-cache-v3-{{ epoch }}
          paths:
            - cache

workflows:
  run-scenarios:
    jobs:
      - job-run-check-googleplay-version
      - job-run-scenarios
          requires:
            - job-run-check-googleplay-version
      - job-run-skillx:
          requires:
            - job-run-scenarios
